- faire les installation de base
- creer des elements react

- creer une fonction nommé render qui affiche un nombre qui s'incrementer.

- creer une balise WelcomeFunc qui affiche bonjour 
avec l'attribut name et affiche son enfant

-Creer une fonction Home qui affiche toute les elements ci-dessous

- creer une class Clock qui affiche l'heure et la recharge
toute les secondes sans recharger la page

- creer une class welcome qui affiche bonjour le nom 
de la balise et son enfant

- creer une baliser incrementer qui a une propriéte start 
égal à 10 et tout les secondes il incremente start
ajouter une seconde propriéte nommé step qui sera la valeur
d'incrementation, ensuite permettre à l'utilisateur de mettre
l'incrementation en pause et créer un bouton qui permet
de reinitialiser ne pas oublier de definir des valeurs
par defaults de start et step

- creer un boutton qui permet d'incrementer manuellement 
avec le click, ensuite remplace le bouton par un liens 
faire ensorte que le liens ne redirige pas vers le href

- Tout supprimer

- Creer une Class Home avec un input et pareil avec
  un text area qui est controler via  React,
  il peut etre modifie avec la méthode react !

- Creer un select avec trois options afficher
  dans le dom l'options selectionner par default

- Creer un select avec trois options et permettre à 
  l'utiliser de faire des choix mutiples
  
- Creer un input check qui peut etre controler par react
  faire un ternaire qui affiche un message si l'input est
  check

- Créer Trois input nommé nom, prenom de type text et newsletter
  de type checkbox il sont controler par react 
  
- Créer un input type text avec une valeur par default il n'est pas
  il n'est pas controler par react

- ajouter bootstrap au projet

- Creer un composant Class nommé field qui permet d'afficher un input et son label
  l'affiche dans le Component Home faire pour name, prénom et newsletter

- Faire pareil avec une fonction ensuite ajouter un bouton a home pour recuperer
  les saisie user dans la console avec JSON et reinitialiser les champs apres click

          TP : Convertisseur Celsius / Fahrenheit

- utiliser bootstrap !
- créer un composant nommé BoilingVedict il a un attribut nommé celsius
et afficher sur un alert de bootstrap si l'eau bout ou pas.

- créer un composant appelé Calculator. Il affiche un <input> qui permet de saisir une température 
  et d'afficher si l'eau bout ou l'eau ne bout pas !

- créer un component nommé temperatureInput avec une propriéte scale il prends soit un string c pour
  celsius et un string f pour Fahrenheit et créer un  objet au début du fichier nommé scaleNames
  avec c = celsius et f = fahrenheit sa valeur herite du parent ne pas oublier de créer les fonctions
  pour passer de celsius à fahrenheit et inversement.

- permettre a partir de Calculator de remonter l'etat des deux inputs

- créer une fonction nommé tryConvert qui permet d'eviter les valeurs d'etre égal a NAN

- créer un component qui peut etre composer nommé button (heritage maniére react) et ensuite creer 
deux component composer de button avec des class bootstrap

- créer un component qui est nomme splitPan il contient deux row left et right ensuite composer les
  deux inputs a l'intérieur de ce dernier


          TP : Liste de produit

- Faire la maquette voici le liens : https://reactjs.org/docs/thinking-in-react.html

- Créer une fonction qui permet d'affiche tout les produit dans le body de la table
  affiche en rouge les produit qui ont stocked a false

- créer l'état que doit faire remonter la valeur de chaque input dans component parent

- Faire descendre l'etat dans le component fils qui ne l'a pas fait monté


         Chapitre 10, composant pur

- Creer un composant pur avec une classe et une fonction et verifie si sa marche
- ajouter une ligne de produit au début et à la fin du pure component de la class
- en utilisant un nouveau rendu avec un timeout
- utiliser la fonction qui à est derriere le pure component video



         Chapitre 11, Les refs et le DOM
- creer une fonction flecher qui recuperer la valeur d'un input non controler par 
react
- faire l'etape ci-dessous sans la fonction flecher
- créer un component en function puis une class nommé Field avec inputs a l'interieur et 
recuperer sa valeur sans qu'elle soit controler par react



         Chapitre 13, Create React App
- creer un projet react !
- creer une class clock qui se met à jour regulièrement
- creer un css specifique a ce component


         Chapitre 14, React avec Parcel
- creer un projet react avec parcel et faire un hello world et lui applique un style css



         Chapitre 15, Les hooks useState
 - Créer un compteur dans une fonction que l'on incrementer avec useState
 - faire ensorte de garde toutes les etats initials maintenant lors du click
 - Créer deux buttons qui au click incrementer grace a useState
 - créer un hook useIncrementer qui permet d'incrementer les valeurs ensuite l'appeller
 dans une autre fonction
 - faire cette fonction et permettre à l'utilisateur de choisir la valeur de début et le
 pas d'incrementation (bonus permettre de desincrementer et reset la valeur)



         Chapitre 16, Les hooks useEffect
  - faire cette fonction et permettre à l'utilisateur de choisir la valeur de début et le
  pas d'incrementation (bonus permettre de desincrementer et reset la valeur) ensuite a chaque 
  incrementation utilise useEffect pour change le titre de la page ne pas oublie d'utiliser 
  le second paramètre de useEffect
  - creer un compteur qui s'incremente tout seul
  - remplacer le button au bout de 2 secondes et regarde ce qui se passer
  - maintenant regler le problème (componentWillUnMount maniére fonction)
  - creer un effet qui s'occupe de change de titre de la page independant du premier effet